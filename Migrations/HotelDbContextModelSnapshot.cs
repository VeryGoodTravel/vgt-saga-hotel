// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using vgt_saga_hotel.Models;

#nullable disable

namespace vgt_saga_hotel.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    partial class HotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("vgt_saga_hotel.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("BookTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HotelDbId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomDbId")
                        .HasColumnType("integer");

                    b.Property<int>("Temporary")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TemporaryDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uuid");

                    b.HasKey("BookingId");

                    b.HasIndex("HotelDbId");

                    b.HasIndex("RoomDbId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("vgt_saga_hotel.Models.HotelDb", b =>
                {
                    b.Property<int>("HotelDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HotelDbId"));

                    b.Property<string>("AirportCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("AirportName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("HotelDbId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("vgt_saga_hotel.Models.RoomDb", b =>
                {
                    b.Property<int>("RoomDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomDbId"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("HotelDbId")
                        .HasColumnType("integer");

                    b.Property<int>("Max10yo")
                        .HasColumnType("integer");

                    b.Property<int>("MaxAdults")
                        .HasColumnType("integer");

                    b.Property<int>("MaxChildren")
                        .HasColumnType("integer");

                    b.Property<int>("MaxLesserChildren")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPeople")
                        .HasColumnType("integer");

                    b.Property<int>("MinAdults")
                        .HasColumnType("integer");

                    b.Property<int>("MinChildren")
                        .HasColumnType("integer");

                    b.Property<int>("MinPeople")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("RoomDbId");

                    b.HasIndex("HotelDbId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("vgt_saga_hotel.Models.Booking", b =>
                {
                    b.HasOne("vgt_saga_hotel.Models.HotelDb", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vgt_saga_hotel.Models.RoomDb", "Room")
                        .WithMany()
                        .HasForeignKey("RoomDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("vgt_saga_hotel.Models.RoomDb", b =>
                {
                    b.HasOne("vgt_saga_hotel.Models.HotelDb", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("vgt_saga_hotel.Models.HotelDb", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
